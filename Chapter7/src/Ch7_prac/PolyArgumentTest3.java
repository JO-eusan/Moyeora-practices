package Ch7_prac;
import java.util.*;
//class Prod {
//	int price;
//	int bonusPoint;
//	
//	Prod(int price) {
//		this.price = price;
//		bonusPoint = (int)(price/10.0);
//	}
//	Prod() {} // 기본 생성자
//}

//class Tele extends Prod {
//	Tele() { super(100); } // 조상 클래스 생성자 호출
//	public String toString() { return "TeleVision"; }
//}
//
//class Computers extends Prod {
//	Computers() { super(200); }
//	public String toString() { return "Computers"; }
//}
//
//class Audio extends Prod {
//	Audio() {super(50); }
//	public String toString() { return "Audio"; }
//}

class Buy {
	int money = 1000;
	int bonusPoint = 0;
	Vector item = new Vector(); // 구입한 제품을 저장하기 위한 배열
	
	void buy(Prod p) {
		if(money < p.price) {
			System.out.println("잔액이 부족하여 물건을 살 수 없습니다.");
			return;
		}
		
		money -= p.price;
		bonusPoint += p.bonusPoint;
		item.add(p); // 구입한 제품을 Vector에 저장
		System.out.println(p + "을/를 구입하셨습니다.");
	}
	
	void refund(Prod p) { // 구입한 제품을 환불한다.
		if(item.remove(p)) { // 구입한 제품을 Vector에서 제거한다.
			money += p.price;
			bonusPoint -= p.bonusPoint;
			System.out.println(p + "을/를 반품하셨습니다.");
		} else { // 제거에 실패한 경우
			System.out.println("구입하신 제품 중 해당 제품이 없습니다.");
		}
	}
	void summary() { // 구입한 물품에 대한 정보를 요약해서 보여준다.
		int sum=0; // 구입한 물품의 가격 합계
		String itemList = ""; // 구입한 물품 목록
		if(item.isEmpty()) { // Vector가 비어있는지 확인한다.
			System.out.println("구입하신 제품이 없습니다.");
			return;
		}
		// 반복문을 사용하여 구입한 물품의 총 가격과 목록을 만든다.
		for(int i=0; i < item.size(); i++) {
			Prod p = (Prod)item.get(i); // Vector의 i번째에 있는 객체를 얻어온다.
			sum += p.price;
			itemList += (i==0) ? "" + p : ", " + p;
		}
		System.out.println("구입하신 물품의 총 금액은 " + sum + "만원입니다.");
		System.out.println("구입하신 제품은 " + itemList + "입니다.");
	}
}
public class PolyArgumentTest3 {

	public static void main(String[] args) {
		Buy b = new Buy();
		Tele tv = new Tele();
		Computers com = new Computers();
		Audio audio = new Audio();
		
		b.buy(tv);
		b.buy(com);
		b.buy(audio);
		b.summary();
		System.out.println();
		b.refund(com);
		b.summary();

	}

}
